<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         id="WebApp_ID" version="2.5">
    <display-name>CLARIN Virtual Collection Registry REST API</display-name>

    <!-- Spring initialisation -->
    <listener>
        <listener-class>
                org.springframework.web.context.ContextLoaderListener
        </listener-class>
    </listener>
    <!-- required to fix issue:
        java.lang.IllegalStateException: Cannot initialize context because there is already a root
            application context present - check whether you have multiple ContextLoader* definitions in
            your web.xml!
    -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>
    
    <context-param>
        <param-name>spring.profiles.active</param-name>
        <param-value>vcr.pid.dummy</param-value>
        <!--<param-value>vcr.pid.gwdg</param-value>-->
    </context-param>
    
    <!-- Persistence -->
    <filter>
        <filter-name>PersistenceFilter</filter-name>
        <filter-class>eu.clarin.cmdi.virtualcollectionregistry.core.PersistenceFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>PersistenceFilter</filter-name>
        <servlet-name>REST-Web-Service</servlet-name>
    </filter-mapping>
    
    <filter-mapping>
        <filter-name>PersistenceFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>CharacterEncodingFilter</filter-name>
        <filter-class>eu.clarin.cmdi.virtualcollectionregistry.core.CharacterEncodingFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

<!--
    <servlet>
        <display-name>Virtual Collection Registry REST web service</display-name>
        <servlet-name>REST-Web-Service</servlet-name>
        <-<servlet-class>com.sun.jersey.spi.spring.container.servlet.SpringServlet</servlet-class>->
        <servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
        <- Register JAX-RS Application, if needed. ->
        <- Register resources and providers under the speciefied packages (separate with ;). ->
        <init-param>
            <-param-name>com.sun.jersey.config.property.packages</param-name->
            <param-name>jersey.config.server.provider.packages</param-name>
            <param-value>eu.clarin.cmdi.virtualcollectionregistry.rest</param-value>
        </init-param>
        <- Enable Tracing support. ->
        <init-param>
            <param-name>jersey.config.server.tracing</param-name>
            <param-value>ALL</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>REST-Web-Service</servlet-name>
        <url-pattern>/*</url-pattern>
    </servlet-mapping>
-->
    <resource-ref>
        <description>Virtual Collection Datastore Connection</description>
        <res-ref-name>jdbc/VirtualCollectionStore</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>

    <mime-mapping>
        <extension>xsd</extension>
        <mime-type>application/xml</mime-type>
    </mime-mapping>

</web-app>
