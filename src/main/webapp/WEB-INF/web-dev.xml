<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_ID" version="2.5" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
    <display-name>CLARIN Virtual Collection Registry</display-name>

    <!-- Spring -->
    
    <listener>
        <listener-class>
            org.springframework.web.context.ContextLoaderListener
        </listener-class>
    </listener>
 
    <context-param>
        <param-name>spring.profiles.active</param-name>
        <param-value>vcr.pid.dummy</param-value>
        <!--<param-value>vcr.pid.gwdg</param-value>-->
    </context-param>
    
    <!-- Persistence -->
 
    <filter>
        <filter-name>PersistenceFilter</filter-name>
        <filter-class>eu.clarin.cmdi.virtualcollectionregistry.rest.PersistenceFilter</filter-class>
    </filter>
    
    <filter-mapping>
        <filter-name>PersistenceFilter</filter-name>
        <servlet-name>REST-Web-Service</servlet-name>
    </filter-mapping>
    
    <filter-mapping>
        <filter-name>PersistenceFilter</filter-name>
        <url-pattern>/app/*</url-pattern>
    </filter-mapping>
    
    <filter>
        <filter-name>CharacterEncodingFilter</filter-name>
        <filter-class>eu.clarin.cmdi.virtualcollectionregistry.gui.CharacterEncodingFilter</filter-class>
    </filter>
    
    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <url-pattern>/app/*</url-pattern>
    </filter-mapping>
    
    <filter>
        <filter-name>VirtualCollectionRegistryApplication</filter-name>
        <filter-class>org.apache.wicket.protocol.http.WicketFilter</filter-class>
        <init-param>
            <param-name>applicationFactoryClassName</param-name>
            <param-value>org.apache.wicket.spring.SpringWebApplicationFactory</param-value>
        </init-param>
        <init-param>
            <param-name>configuration</param-name>
            <!-- 
           <param-value>deployment</param-value>
            -->
            <param-value>development</param-value>
        </init-param>
    </filter>
    
    <filter-mapping>
        <filter-name>VirtualCollectionRegistryApplication</filter-name>
        <url-pattern>/app/*</url-pattern>
    </filter-mapping>
    
    <servlet>
        <display-name>Virtual Collection Registry REST web service</display-name>
        <servlet-name>REST-Web-Service</servlet-name>
        <servlet-class>com.sun.jersey.spi.spring.container.servlet.SpringServlet</servlet-class>
        <init-param>
            <param-name>com.sun.jersey.config.property.packages</param-name>
            <param-value>eu.clarin.cmdi.virtualcollectionregistry.rest</param-value>
        </init-param>
        <init-param>
            <param-name>com.sun.jersey.spi.container.ContainerRequestFilters</param-name>
            <param-value>eu.clarin.cmdi.virtualcollectionregistry.rest.VirtualCollectionMediaTypeFilter</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    
    <servlet-mapping>
        <servlet-name>REST-Web-Service</servlet-name>
        <url-pattern>/service/*</url-pattern>
    </servlet-mapping>
    
    <servlet>
        <display-name>Virtual Collection Registry OAI-PMH Provider</display-name>
        <servlet-name>OAI-PMH-Provider</servlet-name>
        <servlet-class>eu.clarin.cmdi.oai.provider.ProviderServlet</servlet-class>
        <load-on-startup>2</load-on-startup>
    </servlet>
    
    <servlet-mapping>
        <servlet-name>OAI-PMH-Provider</servlet-name>
        <url-pattern>/oai</url-pattern>
    </servlet-mapping>
    
    <resource-ref>
        <description>Virtual Collection Datastore Connection</description>
        <res-ref-name>jdbc/VirtualCollectionStore</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>
    
    <!-- 
        Security constraints; authentication mechanism must be configured
        by means of a security realm (by default the UserDatabaseRealm is
        configured in Tomcat, which uses the tomcat-users.xml file)
    -->
    <security-constraint>
        <display-name>REST-Web-Service</display-name>
        <web-resource-collection>
            <web-resource-name>REST-Web-Service</web-resource-name>
            <description></description>
            <url-pattern>/service/virtualcollections</url-pattern>
            <http-method>POST</http-method>
        </web-resource-collection>
        <web-resource-collection>
            <web-resource-name>REST-Web-Service</web-resource-name>
            <description></description>
            <url-pattern>/service/virtualcollections/*</url-pattern>
            <http-method>DELETE</http-method>
            <http-method>POST</http-method>
            <http-method>PUT</http-method>
        </web-resource-collection>
        <web-resource-collection>
            <web-resource-name>REST-Web-Service</web-resource-name>
            <description></description>
            <url-pattern>/service/my-virtualcollections</url-pattern>
            <http-method>GET</http-method>
        </web-resource-collection>
        <web-resource-collection>
            <web-resource-name>REST-Web-Service</web-resource-name>
            <description></description>
            <url-pattern>/service/submit</url-pattern>
            <http-method>POST</http-method>
        </web-resource-collection>
        <web-resource-collection>
            <web-resource-name>VirtualCollectionRegistryApplication</web-resource-name>
            <description></description>
            <url-pattern>/app/login</url-pattern>
            <http-method>GET</http-method>
        </web-resource-collection>
        <auth-constraint>
            <role-name>dev</role-name>
        </auth-constraint>
    </security-constraint>

    <security-role>
        <role-name>vcr</role-name>
    </security-role>
    
    <login-config>
        <auth-method>BASIC</auth-method>
    </login-config>
    
    <security-role>
        <role-name>*</role-name>
    </security-role>
    
    <mime-mapping>
        <extension>xsd</extension>
        <mime-type>application/xml</mime-type>
    </mime-mapping>
    
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
    
    <!-- 
        Enable JavaMelody for application monitoring
        More info at https://code.google.com/p/javamelody/
    -->
    
    <filter>
        <filter-name>monitoring</filter-name>
        <filter-class>net.bull.javamelody.MonitoringFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>monitoring</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <listener>
        <listener-class>net.bull.javamelody.SessionListener</listener-class>
    </listener>
</web-app>
